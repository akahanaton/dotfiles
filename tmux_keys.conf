## See https://github.com/tmux/tmux/issues/729: How to reset key bindings to default? #729

# default
bind-key    -T prefix C-b              send-prefix
bind-key    -T prefix C-o              rotate-window
bind-key    -T prefix C-z              suspend-client
bind-key    -T prefix Space            next-layout
bind-key    -T prefix !                break-pane
#--------------------------------------------------
# bind-key    -T prefix '"'              split-window
#--------------------------------------------------
bind-key    -T prefix '#'              list-buffers
bind-key    -T prefix '$'              command-prompt -I '#'S "rename-session '%%'"
#--------------------------------------------------
# bind-key    -T prefix %                split-window -h
#--------------------------------------------------
bind-key    -T prefix &                confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key    -T prefix "'"                command-prompt -p index "select-window -t ':%%'"
bind-key    -T prefix (                switch-client -p
bind-key    -T prefix )                switch-client -n
bind-key    -T prefix ,                command-prompt -I '#W' "rename-window '%%'"
bind-key    -T prefix -                delete-buffer
bind-key    -T prefix .                command-prompt "move-window -t '%%'"
bind-key    -T prefix 0                select-window -t :=10
bind-key    -T prefix 1                select-window -t :=1
bind-key    -T prefix 2                select-window -t :=2
bind-key    -T prefix 3                select-window -t :=3
bind-key    -T prefix 4                select-window -t :=4
bind-key    -T prefix 5                select-window -t :=5
bind-key    -T prefix 6                select-window -t :=6
bind-key    -T prefix 7                select-window -t :=7
bind-key    -T prefix 8                select-window -t :=8
bind-key    -T prefix 9                select-window -t :=9
#--------------------------------------------------
# bind-key    -T prefix C-0                select-window -t :=20
# bind-key    -T prefix C-1                select-window -t :=11
# bind-key    -T prefix C-2                select-window -t :=12
# bind-key    -T prefix C-3                select-window -t :=13
# bind-key    -T prefix C-4                select-window -t :=14
# bind-key    -T prefix C-5                select-window -t :=15
# bind-key    -T prefix C-6                select-window -t :=16
# bind-key    -T prefix C-7                select-window -t :=17
# bind-key    -T prefix C-8                select-window -t :=18
# bind-key    -T prefix C-9                select-window -t :=19
#--------------------------------------------------
bind-key    -T prefix ':'                command-prompt
bind-key    -T prefix =                choose-buffer
bind-key    -T prefix ?                list-keys
bind-key    -T prefix D                choose-client
bind-key    -T prefix L                switch-client -l
bind-key    -T prefix M                select-pane -M
bind-key    -T prefix ':'                command-prompt
bind-key    -T prefix =                choose-buffer
bind-key    -T prefix ?                list-keys
bind-key    -T prefix D                choose-client
bind-key    -T prefix L                switch-client -l
bind-key    -T prefix M                select-pane -M
bind-key    -T prefix [                copy-mode
bind-key    -T prefix ]                paste-buffer
bind-key    -T prefix c                new-window
bind-key    -T prefix d                detach-client
bind-key    -T prefix f                command-prompt "find-window '%%'"
bind-key    -T prefix i                display-message
bind-key    -T prefix w                last-window
bind-key    -T prefix P                last-pane
bind-key    -T prefix m                select-pane -m
bind-key    -T prefix n                next-window
bind-key    -T prefix o                select-pane -t :.+
bind-key    -T prefix p                previous-window
bind-key    -T prefix q                display-panes
bind-key    -T prefix r                refresh-client
bind-key    -T prefix s                choose-tree
bind-key    -T prefix t                clock-mode
bind-key    -T prefix W                choose-window
bind-key    -T prefix x                confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key    -T prefix z                resize-pane -Z
bind-key    -T prefix '{'                swap-pane -U
bind-key    -T prefix '}'                swap-pane -D
bind-key    -T prefix '~'                show-messages
bind-key    -T prefix PPage            copy-mode -u
bind-key -r -T prefix Up               select-pane -U
bind-key -r -T prefix Down             select-pane -D
bind-key -r -T prefix Left             select-pane -L
bind-key -r -T prefix Right            select-pane -R
bind-key    -T prefix M-1              select-layout even-horizontal
bind-key    -T prefix M-2              select-layout even-vertical
bind-key    -T prefix M-3              select-layout main-horizontal
bind-key    -T prefix M-4              select-layout main-vertical
bind-key    -T prefix M-5              select-layout tiled
bind-key    -T prefix M-n              next-window -a
bind-key    -T prefix M-o              rotate-window -D
bind-key    -T prefix M-p              previous-window -a
bind-key -r -T prefix M-Up             resize-pane -U 5
bind-key -r -T prefix M-Down           resize-pane -D 5
bind-key -r -T prefix M-Left           resize-pane -L 5
bind-key -r -T prefix M-Right          resize-pane -R 5
bind-key -r -T prefix C-Up             resize-pane -U
bind-key -r -T prefix C-Down           resize-pane -D
bind-key -r -T prefix C-Left           resize-pane -L
bind-key -r -T prefix C-Right          resize-pane -R
bind-key    -T root   MouseDown1Pane   select-pane -t = \; send-keys -M
bind-key    -T root   MouseDown1Status select-window -t =
bind-key    -T root   MouseDown3Pane   if-shell -F -t = '#{mouse_any_flag}' "select-pane -t=; send-keys -M" "select-pane -mt="
# Someone also was wondering how to fix here: http://tmux-users.narkive.com/dTFVvLMh/is-it-possible-to-have-a-binding-that-brings-back-mouse-behavior
bind-key    -T root   MouseDrag1Pane   if-shell -F -t = '#{mouse_any_flag}' "if -Ft= '#{pane_in_mode}' 'copy-mode -M' 'send-keys -M' " "copy-mode -M"

bind-key    -T root   MouseDrag1Border resize-pane -M
bind-key    -T root   WheelUpPane      if-shell -F -t = '#{mouse_any_flag}' "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -et=' "
bind-key    -T root   WheelUpStatus    previous-window
bind-key    -T root   WheelDownStatus  next-window

# user
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind S source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Act more like vim:
# set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# resize pane size
bind H resize-pane -L 20
bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 20


# key bindings for horizontal and vertical panes
unbind %
bind '\' split-window -h -c "#{pane_current_path}"     # 使用|竖屏，方便分屏
unbind '"'
bind '-' split-window -v -c "#{pane_current_path}"     # 使用-横屏，方便分屏

# set mouse off with prefix M
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

# set mouse off with prefix m
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'

bind T swap-window -t 1

bind C command-prompt -p "Name of new window: " "new-window -n '%%'"
bind C new-window \; command-prompt -p "Name for this new window: " "rename-window '%%'"

# copy to clipboard
# Double LMB Select & Copy (Word)
#--------------------------------------------------
# bind-key -T copy-mode-vi DoubleClick1Pane \
#     select-pane \; \
#     send-keys -X select-word \; \
#     send-keys -X copy-pipe "xclip -in -sel primary"
# bind-key -n DoubleClick1Pane \
#     select-pane \; \
#     copy-mode -M \; \
#     send-keys -X select-word \; \
#     send-keys -X copy-pipe "xclip -in -sel primary"
#--------------------------------------------------

# Triple LMB Select & Copy (Line)
#--------------------------------------------------
# bind-key -T copy-mode-vi TripleClick1Pane \
#     select-pane \; \
#     send-keys -X select-line \; \
#     send-keys -X copy-pipe "xclip -in -sel primary"
# bind-key -n TripleClick1Pane \
#     select-pane \; \
#     copy-mode -M \; \
#     send-keys -X select-line \; \
#     send-keys -X copy-pipe "xclip -in -sel primary"
#--------------------------------------------------

# Use vi mode copy and paste
# Use vim keybindings in copy mode
# 1 <prefix>+[ to start “copy-mode”
#--------------------------------------------------
# 2 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
# 3 y to copy the highlighted/selected text
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi ? command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind-key -T copy-mode-vi / command-prompt -p "(search up)" "send -X search-backward \"%%%\""
# 4 q to exit copy mode
# 5 To paste: default is <prefix>+]
#--------------------------------------------------
# bind-key -n M-v paste-buffer
#--------------------------------------------------

